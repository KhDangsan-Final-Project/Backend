<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ms3.mapper.UserMapper">
	<!-- ResultMap -->
	<resultMap type="com.ms3.dto.UserDTO" id="user">
		<id column="id" property="id" />
		<result column="grant_no" property="grantNo" />
		<result column="password" property="password" />
		<result column="name" property="name" />
		<result column="nickname" property="nickname" />
		<result column="email" property="email" />
		<result column="profile" property="profile" />
	</resultMap>

	<!-- 회원가입 -->
	<insert id="insertUser" parameterType="user">
		insert into users(id, password, email, name, nickname, profile)
		values(#{id}, STANDARD_HASH(#{password}, 'SHA512'),
		#{email}, #{name}, #{nickname}, #{profile})
	</insert>

	<!-- 로그인 -->
	<select id="selectUser" resultMap="user" parameterType="map">
		select * from users where id = #{id} and password =
		STANDARD_HASH(#{password}, 'SHA512')
	</select>

	<!-- 회원 정보 조회 -->
	<select id="selectInfoUser" resultMap="user" parameterType="string">
		SELECT * FROM users WHERE id = #{id}
	</select>

	<!-- 회원 정보 업데이트 -->
	<update id="userUpdate" parameterType="user">
		UPDATE users SET
		email = #{email},
		password = STANDARD_HASH(#{password}, 'SHA512'),
		nickname = #{nickname}
		WHERE id = #{id}
	</update>

	<!-- 사용자 검색 -->
	<select id="searchFriend" parameterType="map" resultType="com.ms3.dto.UserDTO">
		SELECT * FROM users 
		WHERE (id LIKE '%' || #{query} || '%'
		OR nickname LIKE '%' || #{query} || '%')
		AND id != #{userId}
	</select>
	
	<select id="isUserExists" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM USERS
        WHERE id = #{id}
    </select>


	<delete id="deleteUser" parameterType="com.ms3.dto.UserDTO">
        DELETE FROM users WHERE id = #{id}
    </delete>

    <!-- 비밀번호 업데이트 -->
    <update id="updatePassword" parameterType="map">
        UPDATE USERS
        SET PASSWORD = #{password}, PASSWORD_RESET_TOKEN = NULL, TOKEN_EXPIRY_TIME = NULL
        WHERE PASSWORD_RESET_TOKEN = #{token}
    </update>
    
    <!-- 비밀번호 재설정 토큰 및 만료 시간 업데이트 -->
    <update id="savePasswordResetToken" parameterType="map">
        UPDATE USERS
        SET PASSWORD_RESET_TOKEN = #{token}, TOKEN_EXPIRY_TIME = #{expiryTime}
        WHERE EMAIL = #{email}
    </update>
    
    <select id="idcheck">
    	SELECT COUNT(*) FROM USERS WHERE ID = #{id}
    </select>
   


</mapper>