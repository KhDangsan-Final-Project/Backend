<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ms3.mapper.FriendMapper">

	<resultMap type="com.ms3.dto.FriendDTO" id="friend">
		<id column="user_id" property="userId" />
		<result column="friend_id" property="friendId" />
		<result column="status" property="status" />
	</resultMap>

	<!-- 친구 추가 요청 -->
	<insert id="addFriendRequest" parameterType="map">
		insert into friend(user_id, friend_id, status) values (#{userId}, #{friendId},'pending')
	</insert>
	
	<insert id="insertFriend" parameterType="com.ms3.dto.FriendDTO">
        insert into friend(user_id, friend_id) values (#{friendId}, #{userId})
    </insert>
	    
	<!-- 친구 목록 조회 -->
    <select id="selectFriend" resultMap="friend" parameterType="string">
        select * from friend where status = 'accepted'
        and (user_id = #{userId} or friend_id = #{userId})
    </select>

	<!-- 친구 요청 조회 -->
	<select id="requestFriend" resultMap="friend" parameterType="string">
		select * from friend where friend_id = #{userId} and
		status = 'pending'
	</select>

	<!-- 친구 요청 수락 -->
    <update id="acceptFriendRequest" parameterType="com.ms3.dto.FriendDTO">
        update friend SET status = #{status}
        where (user_id = #{userId} and friend_id = #{friendId})
        or (user_id = #{friendId} and friend_id = #{userId})
    </update>

	<delete id="rejectFriendRequest" parameterType="com.ms3.dto.FriendDTO">
		delete from friend
		where user_id = #{userId} and
		friend_id = #{friendId} and status = 'pending'
	</delete>

	<delete id="deleteFriend" parameterType="com.ms3.dto.FriendDTO">
       delete from friend
       where (user_id = #{userId} and friend_id = #{friendId})
       or (user_id = #{friendId} and friend_id = #{userId})
    </delete>

</mapper>